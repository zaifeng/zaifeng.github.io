<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on 淡忘起初</title><link>https://iforget.top/categories/golang/</link><description>Recent content in golang on 淡忘起初</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 24 May 2023 12:03:18 +0800</lastBuildDate><atom:link href="https://iforget.top/categories/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Workspace初试</title><link>https://iforget.top/post/go-workspace/</link><pubDate>Wed, 24 May 2023 12:03:18 +0800</pubDate><guid>https://iforget.top/post/go-workspace/</guid><description>​ 为了解决多个有依赖的Module本地同时开发的问题，Go 1.18引入了工作区模式。您可以将其视为一个项目文件夹，其中包含您的Go应用程序和依赖项。在Go Workspace中，您可以创建自己的包和库，或者使用其他人创建的包和库。通过设置Go Workspace，可以轻松地分享Go应</description></item><item><title>Go Arches</title><link>https://iforget.top/post/go-arches/</link><pubDate>Thu, 11 May 2023 19:47:31 +0800</pubDate><guid>https://iforget.top/post/go-arches/</guid><description>查看所有支持的平台和架构 可以使用以下命令 go tool dist list 运行结果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 aix/ppc64 android/386 android/amd64 android/arm android/arm64 darwin/amd64 darwin/arm64 dragonfly/amd64 freebsd/386 freebsd/amd64 freebsd/arm freebsd/arm64 freebsd/riscv64 illumos/amd64 ios/amd64 ios/arm64 js/wasm linux/386 linux/amd64 linux/arm linux/arm64 linux/loong64 linux/mips linux/mips64 linux/mips64le linux/mipsle linux/ppc64 linux/ppc64le linux/riscv64 linux/s390x netbsd/386 netbsd/amd64 netbsd/arm netbsd/arm64 openbsd/386 openbsd/amd64 openbsd/arm openbsd/arm64 openbsd/mips64 plan9/386 plan9/amd64 plan9/arm solaris/amd64 windows/386 windows/amd64 windows/arm windows/arm64</description></item><item><title>Golang实现Bitmap</title><link>https://iforget.top/post/bitmap/</link><pubDate>Tue, 08 Nov 2022 20:41:40 +0800</pubDate><guid>https://iforget.top/post/bitmap/</guid><description>BitMap介绍 BitMap可以理解为通过一个bit数组来存储特定数据的一种数据结构。BitMap常用于对大量整形数据做去重和查询。 在这类查找中，我们可以通过map数据结构进行查找。但如果数据量比较大map数据结构将会大量占用内存。 BitMap用一个比特位来映射某个元素的状态，所</description></item><item><title>Go web编程</title><link>https://iforget.top/reading/go-web-program/</link><pubDate>Thu, 27 Oct 2022 15:56:58 +0800</pubDate><guid>https://iforget.top/reading/go-web-program/</guid><description>Go与web应用 ChitChat论坛 接收请求 处理请求 内容展示 存储数据 Go web 服务 应用测试 发挥Go的并发优势 Go的部署</description></item><item><title>Golang代码调试</title><link>https://iforget.top/post/go-dlv-debug/</link><pubDate>Thu, 27 Oct 2022 13:50:37 +0800</pubDate><guid>https://iforget.top/post/go-dlv-debug/</guid><description>工欲善其事，必先利其器。 程序调试是每个合格的程序员必备的技能，是排查、定位、解决问题的必备技能之一 这里主要描述在vscode 环境下，如何配置dlv进行本地 or 远程调试 本地调试： 1 2 3 4 5 6 7 { &amp;#34;name&amp;#34;: &amp;#34;Local&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;go&amp;#34;, &amp;#34;request&amp;#34;: &amp;#34;launch&amp;#34;, &amp;#34;mode&amp;#34;: &amp;#34;auto&amp;#34;, &amp;#34;program&amp;#34;: &amp;#34;${fileDirname}&amp;#34;, } 远程调试： The Go extension has been communicating with Delve through a custom debug adapter program (legacy mode). As the new Delve&amp;rsquo;s native debug adapter implementation has become available (since Delve</description></item></channel></rss>